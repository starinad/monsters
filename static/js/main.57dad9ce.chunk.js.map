{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","toLowerCase","filter","includes","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAEL,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCPZC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAACX,GACxB,OACE,uBACEC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMc,aCqCPC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXP,SAAU,GACVQ,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEd,SAAUa,S,oBAIhC,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA/BP,EAAN,EAAMA,SAAUQ,EAAhB,EAAgBA,YAOhB,MALoB,MADpBA,EAAcA,EAAYQ,iBAExBhB,EAAWA,EAASiB,QAAO,SAACtB,GAAD,OACzBA,EAAQE,KAAKmB,cAAcE,SAASV,OAItC,sBAAKhB,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEY,YAAY,kBACZC,SAAU,SAACc,GAAD,OACR,EAAKL,SAAS,CAAEN,YAAaW,EAAMC,OAAOC,WAG9C,cAAC,EAAD,CAAUrB,SAAUA,W,GAnCVsB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.57dad9ce.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n  return (\n    <div className='card'>\n      <img\n        alt='monster'\n        src={`https://robohash.org/${props.monster.id}?set=set2`}\n      ></img>\n      <h2>{props.monster.name}</h2>\n      <h2>{props.monster.email}</h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  return (\n    <div className='card-list'>\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}></Card>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = (props) => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={props.placeholder}\n      onChange={props.onChange}\n    />\n  );\n};\n","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      });\n  }\n\n  render() {\n    let { monsters, searchField } = this.state;\n    searchField = searchField.toLowerCase();\n    if (searchField !== '') {\n      monsters = monsters.filter((monster) =>\n        monster.name.toLowerCase().includes(searchField),\n      );\n    }\n    return (\n      <div className='App'>\n        <h1>Monsters</h1>\n        <SearchBox\n          placeholder='search monsters'\n          onChange={(event) =>\n            this.setState({ searchField: event.target.value })\n          }\n        />\n        <CardList monsters={monsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}